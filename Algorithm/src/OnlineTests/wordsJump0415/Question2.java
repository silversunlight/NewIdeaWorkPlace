package OnlineTests.wordsJump0415;

/**
 * 现有n1+n2种面值的硬币，其中前n1种为普通币，可以取任意枚，后n2种为纪念币，每种最多只能取一枚，每种硬币有一个面值，问能用多少种方法拼出m的面值？
 * 输入描述:
 * 第一行三个整数n1, n2, m，分别表示普通币种类数，纪念币种类数和目标面值
 * 第二行n1个整数，第i种普通币的面值a[i]。保证a[i]为严格升序。
 * 第三行n2个整数，第i种纪念币的面值b[i]。保证b[i]为严格升序。
 * 对于30%的测试，保证1<=n1+n2<=10，1<=m<=100，1<=a[i]<=100 1<=b[i]<=100
 * 对于100%的测试，保证1<=n1+n2<=100, 1<=m<=100000, 1<=a[i]<=100000 1<=b[i]<=100000
 * 输出描述:
 * 输出一行，包含一个数字x，表示方法总数对1000000007（1e9+7）取模的结果。
 * 注意：不要忘记取模！
 * 示例1
 * 输入
 * 3 1 5
 * 1 2 3
 * 1
 * 输出
 * 9
 */
public class Question2 {
}
